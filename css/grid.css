.grid:after {
	content:"";
	display: block;
	clear: both;
}

[class*='col-'] {
	float: left;
	padding-left: 2rem;
	padding-right: 2rem;
}

/*used if you ever want a grid with no padding in the columns*/
.grid.wo-padding [class*='col-'] {
	padding: 0;
}

/*used if you ever want a grid with slightly less padding*/
.grid.less-padding [class*='col-'] {
	padding-left: 1rem;
	padding-right: 1rem;
}

.col-2of12 {
	width: 16.66%;
}

.col-3of12 {
	width: 25%;
}

.col-4of12 {
	width:33.33%;
}

.col-5of12 {
	width: 41.66%;
}

.col-6of12 {
	width:50%;
}

.col-8of12 {
	width:66.66%;
}

.col-12of12 {
	width:100%;
}

/*
---
MIN-WIDTH MEDIA QUERIES
---
*/
@media (min-width: 72em) {
	/*centered container is fixed after a certain point*/
	.container-centered {
		width: 62rem;
	}
}

/*
---
MAX-WIDTH MEDIA QUERIES
---
*/
@media (max-width: 84.375em) {
	/*slightly less padding on smaller screens. prevents h2 from becoming more than 1 line*/
	[class*='col-'] {
		padding-left: 1rem;
		padding-right: 1rem;
	}
}

/*media queries for order-form-one!
fixes date/time stacking problems and
makes them more responsive*/
@media (max-width: 72.5em) {
	#order-form-one #date-of-prank {
		width: 100%;
	}

	#order-form-one #date-of-prank [class*='col-'] {
		width: 50%;
	}

	#order-form-one #time-of-prank {
		width: 100%;
	}
	#order-form-one #time-of-prank [class*='col-'] {
		width: 33.33%;
	}
}

@media (max-width: 71.875em) {
	.col-4of12 {
		width: 50%;
	}

	.col-8of12 {
		width: 100%;
	}

	/*some special columns need to be full-width at this media query.
	this class achieves this.*/
	.full-width-at-71-ems {
		width: 100%;
	}

	.product-listing {
		margin-bottom: 2rem;
	}

	.container-side-padding {
		padding-left: 0.5rem;
		padding-right: 0.5rem;
	}

	h1 {
		font-size: 1.7rem;
	}

	/*asides become full-width*/
	aside {
		width: 100%;
		padding-bottom: 0;
	}

	/*special stacked columns; they work opposite of normal columns.
	they are stacked when the screen is big,
	but side-by-side when the screen is medium,
	then stacked again when the screen is small*/
	.stack-of-3 article {
		width: 33.33%;
		float: left;
	}
}

/*media queries for product-diagram-and-description!
fixes stacking problems and
makes them more responsive*/
@media (max-width: 65.625em) {
	#product-diagram-and-description [class*='col-'] {
		width: 100%;
	}

	#product-diagram-and-description img {
		margin-bottom: 2rem;
	}

	.bios img,
	.bios .bio p {
		width: 80%;
		height: auto;
	}
}

@media (max-width: 50em) {
	.col-4of12 {
		width: 100%;
	}

	.col-6of12 {
		width: 100%;
	}

	

	.bios .bio img {
		float: left;
		width: 40%;
		padding-right: 2rem;
	}

	.bios .bio p {
		width: auto;
	}

	.bios .bio h3,
	.bios .bio p {
		text-align: left;
	}

	.bios .bio h3 {
		margin-top: 0;
	}

	.bios article.bio {
		padding-left: 0;
	}

	h2 {
		font-size: 1.5rem;
		margin-bottom: 2rem;
	}

	section, aside {
		padding: 4rem 0;
	}

	/*special stacked columns; they work opposite of normal columns.
	they are stacked when the screen is big,
	but side-by-side when the screen is medium,
	then stacked again when the screen is small*/
	.stack-of-3 article {
		width: 100%;
	}
}

@media (max-width: 40.625em) {
	.container-centered {
		width: 95%;
	}
}

@media (max-width: 31.25em) {
	.bios .bio img {
		float: none;
		width: 80%;
		padding-right: 0;
	}

	.bios .bio p {
		width: 80%;
	}

	.bios .bio h3,
	.bios .bio p {
		text-align: center;
	}

	.bios .bio h3 {
		margin-top: 2rem;
	}

	.bios article.bio {
		padding-left: 0;
		padding-right: 0;
	}
}

@media (max-width: 27.438em) {
	.button-default,
	.button-reset {
		padding-left: 2rem;
		padding-right: 2rem;
	}

	section, aside {
		padding: 3rem 0;
	}
}

@media (max-width: 25em) {
	.button-default,
	.button-reset {
		width: 100%;
		margin-bottom: 1rem;
	}

	/*buttons in product listing are not 100%
	because they use absolute pos instead.*/
	.product-listing .button-default,
	.product-listing .button-reset {
		width: auto;
	}


	section, aside {
		padding: 3rem 0;
	}

	.bios .bio img,
	.bios .bio p {
		width: 100%;
	}
}